name: CI
on:
  pull_request:
  schedule:
    - cron: "0 6 * * *"

jobs:
  mmo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - "3.6"
          - "3.8"
        mongodb_version:
          - "4.2"
          - "4.4"
        ansible_version:
          - stable-2.10
    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install ansible-base (${{ matrix.ansible_version }})
      run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible_version }}.tar.gz --disable-pip-version-check

    - name: Install community.general
      run: ansible-galaxy collection install community.general

    - name: Install community.crypto
      run: ansible-galaxy collection install community.crypto

    - name: Install community.mongodb
      run: ansible-galaxy collection install community.mongodb

    - name: Create playbook to install repo for MongoDB ${{ matrix.ansible_version }}
      run: |
         cat << EOF > /tmp/mongodb.yml
            - hosts: servers
              roles:
                - { role: community.mongodb.mongodb_repository, mongodb_version: "${{ matrix.mongodb_version }}" }
         EOF

    - name: Execute playbook
      run: ansible-playbook -c local --become /tmp/mongodb.yml

    - name: Install the mongodb package
      run: sudo apt install mongodb-org

    # Deprecated
    #- name: Setup a MongoB Sharded Cluster
    #  run: |
    #    source bash/mmo_mongodb_cluster.sh;
    #    mmo_setup_cluster;

    - name: Install mtools
      run: pip install --user mtools[all]

    - name: Add mtools location to path
      run: echo "/home/runner/.local/bin" >> $GITHUB_PATH

    - name: Setup a MongoDB Sharded Cluster
      run: mlaunch --replicaset --sharded shard01 shard02 shard03 --auth --username admin --password admin

    #- name: Debug
    #  run: cat data/.mlaunch_startup
    - name: Pause to all a little time for replicaset to stablise
      run: sleep 10

    - name: Run mm command and get output
      id: mm
      run: |
        output=$(python/app/mm -D admin -u user -p password --repl)
        echo "::set-output name=mm::$output"

    - name: Validate output of the repl command shard001
      uses: nick-invision/assert-action@v1
      with:
        expected: shard001
        actual: ${{ steps.mm.outputs.mm }}
        comparison: Contains

    - name: Validate output of the repl command shard002
      uses: nick-invision/assert-action@v1
      with:
        expected: shard002
        actual: ${{ steps.mm.outputs.mm }}
        comparison: Contains

    - name: Validate output of the repl command shard003
      uses: nick-invision/assert-action@v1
      with:
        expected: shard003
        actual: ${{ steps.mm.outputs.mm }}
        comparison: Contains

    - name: Validate output of the repl command shard001
      uses: nick-invision/assert-action@v1
      with:
        expected: configRepl
        actual: ${{ steps.mm.outputs.mm }}
        comparison: Contains

    - name: Validate output of the repl command PRIMARY
      uses: nick-invision/assert-action@v1
      with:
        expected: PRIMARY
        actual: ${{ steps.mm.outputs.mm }}
        comparison: Contains

    - name: Validate output of the repl command SECONDARY
      uses: nick-invision/assert-action@v1
      with:
        expected: SECONDARY
        actual: ${{ steps.mm.outputs.mm }}
        comparison: Contains
